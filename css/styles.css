:root {
  --color-primary: #2584ff;
  --color-secondary: #00d9ff;
  --color-accent: #ff3400;
  --color-headings: #1b0760;
  --color-body: #918ca4;
  --color--borders: #ccc;
  --color-body-darker: #5c5577;
}

*,
*::after,
*::before {
  /* Se coloca el box-sizing como border box para que agarre los valores del padding con el de contenido y sean juntos, no para que sume aparte */
  box-sizing: border-box;
}

html {
  /* 62.5% of 16px = 10px */
  font-size: 62.5%;
}

/* Topografía */
body {
  font-family: Inter, Arial, Helvetica, sans-serif;
  font-size: 2.4rem;
  line-height: 1.5;
  color: var(--color-body);
}

h1,
h2,
h3 {
  color: var(--color-headings);
  margin-bottom: 1rem;
}

h1 {
  font-size: 7rem;
}

h2 {
  font-size: 4rem;
}

h3 {
  font-size: 3rem;
}

p {
  margin-top: 0;
}

/* Media queries para pantallas mayores a 1024 */
@media screen and (min-width: 1024px) {
  body {
    font-size: 1.8rem;
  }

  h1 {
    font-size: 8rem;
  }

  h2 {
    font-size: 4rem;
  }

  h3 {
    font-size: 2.4rem;
  }
}

/* Links */
a {
  text-decoration: none;
}

.link-arrow {
  color: var(--color-accent);
  text-transform: uppercase;
  font-size: 2rem;
  font-weight: bold;
}
.link-arrow::after {
  content: "-->";
  margin-left: 5px;
  /* Se coloca una transición en el margin  */
  transition: margin 0.15s;
}

/* Se usa un hover para el después */
.link-arrow:hover::after {
  margin-left: 10px;
}
@media screen and (min-width: 1024px) {
  .link-arrow {
    font-size: 1.5rem;
  }
}

/* Badges */
/* Se va a seguir el principio de POO- Modelos con diferentes pieles */

/* Primero: Se define la estrucutra */

.badge {
  border-radius: 20px;
  padding: 0.5rem 2rem;
  font-weight: 600;
  font-size: 2rem;
  /* Se pone esto para qeu no salte a otra linea */
  white-space: nowrap;
}
/* Se sigue el principio de BEM */
/* En este caso se pone nombreClase con "--" para un elemento */
.badge--primary {
  background-color: var(--color-primary);
  color: white;
}

.badge--secondary {
  background-color: var(--color-secondary);
  color: white;
}

.badge--small {
  padding: 0.5rem 1.5rem;
  font-size: 1.6rem;
}

@media screen and (min-width: 1024px) {
  .badge {
    font-size: 1.5rem;
  }

  .badge--small {
    font-size: 1.2rem;
  }
}

/* Listas */

.list {
  list-style: none;
  padding-left: 0;
  color: var(--color-headings);
}
/* Se debe de aplicar object oriented css para crear otro tipo de lista apartir de la anterior */
/* Separar estructura de la skin */

/* Se sigue lo de BEM, en este caso para poner un elemento se ponen "__"  para identificar que es un elemento*/
.list--inline .list__item {
  display: inline-block;
  margin-right: 2rem;
}

.list--tick {
  list-style-image: url(../src/tick.svg);
  padding-left: 3rem;
}

/* Se aplica a los elemento que tienen la clase principal */
.list--tick .list__item {
  padding-left: 00.5rem;
}


@media screen and (min-width: 1024px) {
  .list--tick .list__item {
    padding-left: 0;
  }
}

/* Icons */
.icon {
  width: 40px;
  height: 40px;
}
.icon--small{
  width: 30px;
  height: 30px;
}

.icon--primary {
  fill: var(--color-primary);
}


.icon--white {
  fill: #fff;
}

.icon-container {
  align-items: center;
  background: #f3f9fa;
  border-radius: 100%;
  display: inline-flex;
  height: 64px;
  justify-content: center;
  width: 64px;
}

.icon-container--accent{
  background: var(--color-accent);
}
/* Botones */

.btn {
  border-radius: 40px;
  border: 0;
  cursor: pointer;
  font-size: 1.8rem;
  margin: 1rem 0;
  font-weight: 600;
  padding: 2rem 3rem;
  text-transform: uppercase;
  white-space: nowrap;
  text-align: center;
}

.btn--primary {
  background: var(--color-primary);
  color: #fff;
}

.btn--primary:hover {
  background: #3a8ffd;
}

.btn--secondary {
  background: var(--color-secondary);
  color: #fff;
}

.btn--secondary:hover {
  background: #00c8eb;
}

.btn--accent {
  background: var(--color-accent);
  color: #fff;
}
.btn--accent:hover {
  background: #ec3000;
}

/* Se hace el boton como bloque para modifcarlo */
.btn--block {
  width: 100%;
  display: inline-block;
}

.btn--outline {
  background: #fff;
  color: var(--color-headings);
  border: 2px solid var(--color-headings);
}

.btn--outline:hover {
  background: var(--color-headings);
  color: #fff;
}

.btn--stretched{
  padding-left: 6rem;
  padding-right: 6rem;
}
@media screen and (min-width: 1024px) {
  .btn {
    font-size: 1.5rem;
  }
}

/* Inputs */

.input {
  font-size: 2rem;
  color: var(--color-headings);
  padding: 2rem 3rem;
  border-radius: 30px;
  outline: 0;
  border: 1px solid var(--color--borders);
}

::placeholder {
  color: #cdcbd7;
}
/* .input--block{
  display: inline-block;
  width: 100%;
} */

.input-group {
  border: 1px solid var(--color--borders);
  border-radius: 30px;
  display: flex;
}

/* Nesting */

/* Esto dice que cuando estemos en un grupo input y haya un input, este debe de etner esto */
.input-group .input {
  border: none;
  flex-grow: 1;
}

/* Clase hija adentro de la clase padre */

.input-group .btn {
  margin: 4px;
}
@media screen and (min-width: 1024px) {
  .input {
    font-size: 1.5rem;
  }
}

/* Cards */
.card {
  border-radius: 7px;
  box-shadow: 0 0 20px 10px #f3f3f3;
  overflow: hidden;
}

.card__header,
.card__body {
  padding: 2rem 3rem;
}

.card--primary .card__header {
  background-color: var(--color-primary);
  color: white;
}

.card--secondary .card__header {
  background-color: var(--color-secondary);
  color: white;
}

.card--secondary .badge--secondary{
  background-color: #02cdf1;
}
/* Plans */
.plan{
  padding: 1rem;
}

.plan--popular .card__header{
  position: relative;
}

.plan--popular .card__header::before{
  content: url(../src/popular.svg);
  width: 40px;
  display: inline-block;
  position: absolute;
  top: -6px;
  right: 5%;
}
.plan__name{
  color: #fff;
  margin: 0;
  font-weight: 500;
  font-size: 2.4rem;
}


.plan__price{
  font-size: 6rem;
}

.plan__billing-cycle{
  font-size: 2.4rem;
  font-weight: 300;
  opacity: 0.8;
  margin-right: 1rem;
}

.plan__description{
  font-size: 2rem;
  font-weight: 300;
  letter-spacing: 1px;
  opacity: 0.9;
  display: block;
}

/* Esto nos dice que si esta utilizando un elemento una clase lisitem en el bloque padre plan, vamos a ejecutar el siguiente codigo */
.plan .list__item{
  font-weight: 500;
  margin-top: 1rem;
  letter-spacing: 1px;
}

@media screen and (min-width: 1024px) {
  .plan__name{
    font-size: 1.4rem;
  }

  .plan__price{
    font-size: 5rem;
  }

  .plan__billing-cycle{
    font-size: 1.6rem;
  }

  .plan__description{
    font-size: 1.7rem;

  }
}

/* Media */

.media{
  display: flex;
}

.media__title{
  margin-top: 0;
}

.media__body{
  margin: 0 2rem; 
}

.media__image{
  margin-top: 1.3rem;
}

/* Quotes */

.quote{
  font-size: 3rem;
  color: var(--color-body-darker);
  font-style: italic;
}

.quote__text::before{
  content: open-quote;
}

.quote__text::after{
  content: close-quote;
}

/* Esta forma esta mal ya que si luego queremos destruir y construir otra forma o reestructura la parte del media, entonces se vería mal */
/* .quote .media{
  font-style: normal;
} */

/* Entonce se usa una clase independiente para un elemento para que este sea independiente */
.quote__author{
  font-style: normal;
  font-size: 3rem;
  font-weight: 500;
  letter-spacing: 1px;
  margin-bottom: 0;
}

.quote__company{
  opacity: 0.5;
  font-size: 2.1rem;
}

.quote__image{
  position: relative;
  margin-top: 2;
  bottom: 10px;
}

@media screen and (min-width: 1024px) {
  .quote{
    font-size: 2rem;
  }

  .quote__author{
    font-size: 2.4rem;
  }

  .quote__company{
    font-size: 1.5rem;
  }
}

/* Grids */

.grid{
  display: grid;
}

@media screen and (min-width: 768px) {

  /* Esta clase solo existe si la resolucion es menor a 768px, no esta definida afuera */
  .grid--1x2{
    grid-template-columns: repeat(2, 1fr);
  }
}

@media screen and (min-width: 1024px) {

  /* Esta clase solo existe si la resolucion es menor a 768px, no esta definida afuera */
  .grid--1x3{
    grid-template-columns: repeat(3, 1fr);
  }
}

/* tESTIMONIALS */

.testimonial{
  padding: 3rem;
}
.testimonial__image {
  position: relative;
}
/* Se usa el puntero directo del hijo, apunta a un hijo dentro de una clase */
.testimonial__image > img{
  width: 100%;
}

/* Aqui lo que hacemos es en neustra clase "testimonial__image" vamos a apuntar a nuestro elemnto que tiene la clase icon-container  */
.testimonial__image > .icon-container{
  position: absolute;
  top: 3rem;
  right: -32px;
}

@media screen and (min-width: 768px) {

  /* Este estilo va a ser para los elementos quote que estan adentro del bloque testimonial */
  .testimonial .quote, .testimonial .quote__author{
    font-size: 2.4rem;
  }

  .testimonial .quote {
    margin-left: 6rem;
  }

}

/* Callouts */

.callout{
  padding: 4rem;
  border-radius: 5px;
}

.callout--primary{
  background: var(--color-primary);
  color: #fff;
}

.callout__heading{
  color: #fff;
  margin-top: 0;
  font-size: 3rem;
}

.callout__content{
  text-align: center;
}
/* Se crea un estilo para la clase btn en la clase padre callout si es que existe */

.callout .btn{
  align-self: center;
  justify-self: center;
}

@media screen and (min-width: 768px) {

  /* Este estilo nos dice "en el callout component, si tenemos un elemento con un grid */
  .callout .grid--1x2{
    /* Lo que se hace es dejar todo el espacio libro se lo dara a la primera columna por el fr */
    grid-template-columns: 1fr auto;
  }

  .callout__content{
    text-align: left;
  }

  .callout .btn{
    justify-self: start;
    margin: 0 3rem;
  }
}

/* Collapsables */

/* No se essta poniendo un tamaño especifico para el collapsible para que sea flexible */
.collapsible__header{
  display: flex;
  justify-content: space-between;
}

.collapsible__heading{
  margin-top: 0;
  font-size: 3rem;
}

.collapsible__chevron{
  transform: rotate(-90deg);
  transition: transform 0.3s;
}

.collapsible__content{
  max-height: 0;
  overflow: hidden;
  opacity: 0;
  transition: all 0.3s;
}

/* El expanded es un modificador a nuestro collapsible- pero si tenemos esta clase en nuestro toplevel, vamos a modificar la clase */
/* Es siempre la forma de que si esta esta clase adentro de la clase padre, entonces vamos a hacerle esto a la clase hija */
.collapsible--expanded .collapsible__chevron{
  transform: rotate(0);
}

/* Esta nos dice: */
/* Que si existe la clase expanded y adentro de este bloque hay un elemento con la clase hija, entonces vamos a hacer lo siguiente a la clase hija */
/* Lo que es mostrarla */
.collapsible--expanded .collapsible__content{
  max-height: 100vh;
  opacity: 1;
}

/* Blocks */

.block{
  /* Esta variable se puede acceder  para todos sus hijos */
  --padding-vertical: 6rem;
  padding:var(--padding-vertical) 2rem;
}

/* Se coloca un header con las cosas que queramos en el con el siguiente estilo */
/* Todo esto para que solo aplique los estilos al haeder y no a todos los elementos hijos de la clase padre */
.block__header{
  text-align: center;
}

.block__heading{
  margin-top: 0;
}

.block--dark{
  background: #000;
  color: #7b858b;
}

/* En el bloque block dark si existe un elemento heading, vamos a aplicar esto, solo si esta adentro de un block--dark */
.block--dark .block__heading{
  color: #fff;
}
.block--skewed-right{
  clip-path: polygon(0 0, 100% 0, 100% 100%, 0 91%);
  padding-bottom: calc(var(--padding-vertical)+4rem);
}

.block--skewed-left{
  clip-path: polygon(0 0, 100% 0, 100% 91%, 0 100%);
  padding-bottom: calc(var(--padding-vertical)+4rem);
}

.container{
  max-width: 1140px;
  /* lo que hace es "mejorar" y ajustar el bloque del contenedor para que no haya espacios afuera y lo centre */
  margin: 0 auto;
}


/* Navigation Bar */

.nav {
  background: #000;
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  padding: 1rem;
  align-items: center;
}

.nav__list {
  width: 100%;
  margin: 0;
}

.nav__item {
  padding: 0.5rem 2rem;
  border-bottom: 1px solid #222;
}

.nav__item:last-of-type {
  border-bottom: none;
}

.nav__item>a {
  color: #d2d0db;
  transition: color 0.3s;
}

.nav__item>a:hover {
  color: #fff;
}

.nav__toggler {
  opacity: 0.5;
  transition: box-shadow 0.15s;
  cursor: pointer;
}

.nav.collapsible--expanded .nav__toggler {
  opacity: 1;
  box-shadow: 0 0 0 3px #666;
  border-radius: 5px;
}

.nav__brand {
  transform: translateY(5px);
  width: 150px;
}

@media screen and (min-width: 768px) {
  .nav__toggler {
    display: none;
  }
  .nav__list {
    width: auto;
    display: flex;
    font-size: 1.6rem;
    max-height: 100%;
    opacity: 1;
  }
  .nav__item {
    border: 0;
  }
}
